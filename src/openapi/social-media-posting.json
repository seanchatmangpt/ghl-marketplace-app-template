{
    "openapi": "3.0.0",
    "paths": {
        "/social-media-posting/oauth/google/start": {
            "get": {
                "operationId": "start-google-oauth",
                "summary": "Starts OAuth For Google Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Google login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"google\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Google account details using below API -\n  API: '/social-media-posting/oauth/google/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Google"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/google/locations/{accountId}": {
            "get": {
                "operationId": "get-google-locations",
                "summary": "Get google business locations",
                "description": "Get google business locations",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGoogleLocationResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Google"
                ]
            },
            "post": {
                "operationId": "set-google-locations",
                "summary": "Set google business locations",
                "description": "Set google business locations",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachGMBLocationDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaGmbAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Google"
                ]
            }
        },
        "/social-media-posting/{locationId}/posts/list": {
            "post": {
                "operationId": "get-posts",
                "summary": "Get posts",
                "description": "Get Posts",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchPostDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostSuccessfulResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Post"
                ]
            }
        },
        "/social-media-posting/{locationId}/posts": {
            "post": {
                "operationId": "create-post",
                "summary": "Create post",
                "description": "Create all supported platform posts. The content and media limitations and platform rate limiters corresponding to the respective platforms is provided in the following reference link:\n\n  Link: [Platform Limitations](https://help.leadconnectorhq.com/support/solutions/articles/48001240003-social-planner-image-video-content-and-api-limitations \"Social Planner Help\")",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePostSuccessfulResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Post"
                ]
            }
        },
        "/social-media-posting/{locationId}/posts/{id}": {
            "get": {
                "operationId": "get-post",
                "summary": "Get post",
                "description": "Get post",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Post Id",
                        "example": "65fac446d599990d1313c1dd",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPostSuccessfulResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Post"
                ]
            },
            "put": {
                "operationId": "edit-post",
                "summary": "Edit post",
                "description": "Create all supported platform posts. The content and media limitations and platform rate limiters corresponding to the respective platforms is provided in the following reference link:\n\n  Link: [Platform Limitations](https://help.leadconnectorhq.com/support/solutions/articles/48001240003-social-planner-image-video-content-and-api-limitations \"Social Planner Help\")",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Post Id",
                        "example": "65fac446d599990d1313c1dd",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePostSuccessfulResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Post"
                ]
            },
            "delete": {
                "operationId": "delete-post",
                "summary": "Delete Post",
                "description": "Delete Post",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Post Id",
                        "example": "65fac446d599990d1313c1dd",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletePostSuccessfulResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Post"
                ]
            }
        },
        "/social-media-posting/{locationId}/accounts": {
            "get": {
                "operationId": "get-account",
                "summary": "Get Accounts",
                "description": "Get list of accounts and groups",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsListResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ]
            }
        },
        "/social-media-posting/{locationId}/accounts/{id}": {
            "delete": {
                "operationId": "delete-account",
                "summary": "Delete Account",
                "description": "Delete account and account from group",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Id",
                        "example": "65fac446d599990d1313c1dd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyId",
                        "required": false,
                        "in": "query",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "description": "User ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationAndAccountDeleteResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ]
            }
        },
        "/social-media-posting/oauth/facebook/start": {
            "get": {
                "operationId": "start-facebook-oauth",
                "summary": "Starts OAuth For Facebook Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Facebook login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"facebook\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Facebook account details using below API -\n  API: '/social-media-posting/oauth/facebook/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "Facebook Account Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Facebook Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect boolean as string",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Facebook"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/facebook/accounts/{accountId}": {
            "get": {
                "operationId": "get-facebook-page-group",
                "summary": "Get facebook pages",
                "description": "Get facebook pages",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response, runs Facebook OAuth and redirects to application",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFacebookAccountsResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Facebook"
                ]
            },
            "post": {
                "operationId": "attach-facebook-page-group",
                "summary": "Attach facebook pages",
                "description": "Attach facebook pages",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachFBAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaFBAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Facebook"
                ]
            }
        },
        "/social-media-posting/oauth/instagram/start": {
            "get": {
                "operationId": "start-instagram-oauth",
                "summary": "Starts OAuth For Instagram Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Instagram login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"instagram\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Instagram account details using below API -\n  API: '/social-media-posting/oauth/instagram/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Instagram"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/instagram/accounts/{accountId}": {
            "get": {
                "operationId": "get-instagram-page-group",
                "summary": "Get Instagram Professional Accounts",
                "description": "Get Instagram Professional Accounts",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstagramAccountsResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Instagram"
                ]
            },
            "post": {
                "operationId": "attach-instagram-page-group",
                "summary": "Attach Instagram Professional Accounts",
                "description": "Attach Instagram Professional Accounts",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachIGAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaInstagramAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Instagram"
                ]
            }
        },
        "/social-media-posting/oauth/linkedin/start": {
            "get": {
                "operationId": "start-linkedin-oauth",
                "summary": "Starts OAuth For LinkedIn Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to LinkedIn login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"linkedin\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch LinkedIn account details using below API -\n  API: '/social-media-posting/oauth/linkedin/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | LinkedIn"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/linkedin/accounts/{accountId}": {
            "get": {
                "operationId": "get-linkedin-page-profile",
                "summary": "Get Linkedin pages and profile",
                "description": "Get Linkedin pages and profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLinkedInAccountsResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | LinkedIn"
                ]
            },
            "post": {
                "operationId": "attach-linkedin-page-profile",
                "summary": "Attach linkedin pages and profile",
                "description": "Attach linkedin pages and profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachLinkedinAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaLinkedInAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | LinkedIn"
                ]
            }
        },
        "/social-media-posting/oauth/twitter/start": {
            "get": {
                "operationId": "start-twitter-oauth",
                "summary": "Starts OAuth For Twitter Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Twitter login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"twitter\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Twitter account details using below API -\n  API: '/social-media-posting/oauth/twitter/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Twitter"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/twitter/accounts/{accountId}": {
            "get": {
                "operationId": "get-twitter-profile",
                "summary": "Get Twitter profile",
                "description": "Get Twitter profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTwitterAccountsResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Twitter"
                ]
            },
            "post": {
                "operationId": "attach-twitter-profile",
                "summary": "Attach Twitter profile",
                "description": "Attach Twitter profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachTwitterAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaTwitterAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Twitter"
                ]
            }
        },
        "/social-media-posting/oauth/tiktok/start": {
            "get": {
                "operationId": "start-tiktok-oauth",
                "summary": "Starts OAuth For Tiktok Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Tiktok login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"tiktok\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Tiktok account details using below API -\n  API: '/social-media-posting/oauth/tiktok/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Tiktok"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/tiktok/accounts/{accountId}": {
            "get": {
                "operationId": "get-tiktok-profile",
                "summary": "Get Tiktok profile",
                "description": "Get Tiktok profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTiktokAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Tiktok"
                ]
            },
            "post": {
                "operationId": "attach-tiktok-profile",
                "summary": "Attach Tiktok profile",
                "description": "Attach Tiktok profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachTiktokAccountDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialMediaTiktokAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Tiktok"
                ]
            }
        },
        "/social-media-posting/oauth/tiktok-business/start": {
            "get": {
                "operationId": "start-tiktok-business-oauth",
                "summary": "Starts OAuth For Tiktok Business Account",
                "description": "Open the API in a window with appropriate params and headers instead of using the Curl. User is navigated to Tiktok-Business login OAuth screen. On successful login, listen on window object for message where event listener returns data in its callback function. \n  ### Sample code to listen to event data:\n    window.addEventListener('message', \n      function(e) {\n        if (e.data && e.data.page === 'social_media_posting') {\n        const { actionType, page, platform, placement, accountId, reconnectAccounts } = e.data\n        }\n      },\n    false)\n  ### Event Data Response:\n    {\n      actionType: string,            Ex: \"close\" \n      page: string,                  Ex: \"social-media-posting\" \n      platform: string,              Ex: \"tiktok-business\" \n      placement: string,             Ex: \"placement\" \n      accountId: string,             Ex: \"658a9b6833b91e0ecb8f3958\" \n      reconnectAccounts: string[]]   Ex: [\"658a9b6833b91e0ecb834acd\", \"efd2daa9b6833b91e0ecb8f3511\"] \n    }\n  ### The accountId retrieved from above data can be used to fetch Tiktok-Business account details using below API -\n  API: '/social-media-posting/oauth/tiktok-business/accounts/:accountId' \n\n  Method: GET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "description": "User Id",
                        "example": "u37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page",
                        "example": "integration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reconnect",
                        "required": false,
                        "in": "query",
                        "description": "Reconnect",
                        "example": "true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Tiktok"
                ]
            }
        },
        "/social-media-posting/oauth/{locationId}/tiktok-business/accounts/{accountId}": {
            "get": {
                "operationId": "get-tiktok-business-profile",
                "summary": "Get Tiktok Business profile",
                "description": "Get Tiktok Business profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Account Location Id",
                        "example": "w37swmmLbA02zgqKPpxITe2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "required": true,
                        "in": "path",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTiktokBusinessAccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Oauth | Tiktok"
                ]
            }
        }
    },
    "info": {
        "title": "Social Media Posting API",
        "description": "Documentation for Social Media Posting API",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Social Media Posting",
            "description": "Documentation for Social Media Posting API"
        }
    ],
    "servers": [
        {
            "url": "https://services.leadconnectorhq.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Location-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Agency-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Company",
                "type": "http"
            }
        },
        "schemas": {
            "BadRequestDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad Request"
                    }
                }
            },
            "UnauthorizedDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "example": "Invalid token: access token is invalid"
                    },
                    "error": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                }
            },
            "UnprocessableDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 422
                    },
                    "message": {
                        "example": [
                            "Unprocessable Entity"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "error": {
                        "type": "string",
                        "example": "Unprocessable Entity"
                    }
                }
            },
            "GoogleLocationSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "accounts/114659701071209971352"
                    },
                    "storeCode": {
                        "type": "string",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "title": {
                        "type": "string",
                        "example": "Location Title"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Meta data not related to User",
                        "example": {}
                    },
                    "storefrontAddress": {
                        "type": "object",
                        "description": "Store front address",
                        "example": {}
                    },
                    "relationshipData": {
                        "type": "object",
                        "description": "All locations and chain related to this one",
                        "example": {}
                    },
                    "maxLocation": {
                        "type": "boolean",
                        "example": true
                    },
                    "isVerified": {
                        "type": "boolean",
                        "example": true
                    },
                    "isConnected": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "GoogleAccountsSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "accounts/114659701071209971352"
                    },
                    "accountName": {
                        "type": "string",
                        "example": "Account Name Test"
                    },
                    "type": {
                        "type": "string",
                        "example": "PERSONAL"
                    },
                    "verificationState": {
                        "type": "string",
                        "example": "UNVERIFIED"
                    },
                    "vettedState": {
                        "type": "string",
                        "example": "NOT_VETTED"
                    }
                }
            },
            "GetGoogleLocationSchema": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "Google Location Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GoogleLocationSchema"
                            }
                        ]
                    },
                    "account": {
                        "description": "Google Account Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GoogleAccountsSchema"
                            }
                        ]
                    }
                }
            },
            "GetGoogleLocationAccountSchema": {
                "type": "object",
                "properties": {
                    "locations": {
                        "description": "Locations",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetGoogleLocationSchema"
                            }
                        ]
                    }
                }
            },
            "GetGoogleLocationResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Google Business Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetGoogleLocationAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachGMBLocationDTO": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "object"
                    },
                    "account": {
                        "type": "object"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                }
            },
            "SocialGoogleMediaAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "google"
                    },
                    "type": {
                        "type": "object",
                        "example": "location"
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaGmbAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Google Business Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialGoogleMediaAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "SearchPostDTO": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "Filter type",
                        "default": "all"
                    },
                    "accounts": {
                        "type": "string",
                        "example": "Accounts",
                        "default": "as_ds_td"
                    },
                    "skip": {
                        "type": "string",
                        "example": "1",
                        "default": "0"
                    },
                    "limit": {
                        "type": "string",
                        "example": "10",
                        "default": "10"
                    },
                    "fromDate": {
                        "type": "string",
                        "description": "From Date",
                        "example": "2024-01-22T05:32:49.463Z"
                    },
                    "toDate": {
                        "type": "string",
                        "description": "To Date",
                        "example": "2024-03-20T05:32:49.463Z"
                    },
                    "includeUsers": {
                        "type": "string",
                        "description": "Include User Data"
                    },
                    "postType": {
                        "type": "object",
                        "description": "Post Type must be one of the following values: - post, story, reel",
                        "example": "post"
                    }
                },
                "required": [
                    "skip",
                    "limit",
                    "fromDate",
                    "toDate",
                    "includeUsers"
                ]
            },
            "PostMediaSchema": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "https://i0.wp.com/www.lifeofanarchitect.com/wp-content/uploads/2021/10/architectural-model-making-stairs.jpg"
                    },
                    "caption": {
                        "type": "string",
                        "example": "Caption 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "video/mp4 or image/png"
                    },
                    "thumbnail": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/test/test/media/test.jpeg"
                    },
                    "defaultThumb": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/test/test/media/test.jpeg"
                    },
                    "id": {
                        "type": "string",
                        "example": "Edf3323fsfsdsd"
                    },
                    "watermarkId": {
                        "type": "string",
                        "description": "Watermark Id used for watermarking media",
                        "example": "32e9EPM428h8vShlRW1KT"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "OgTagsSchema": {
                "type": "object",
                "properties": {
                    "metaImage": {
                        "type": "string",
                        "description": "Meta Image",
                        "example": "https://wwww.lifeofanarchitect.com/wp-content/uploads/2021/10/architectural-model-making-stairs.jpg"
                    },
                    "metaLink": {
                        "type": "string",
                        "description": "Meta Link"
                    }
                }
            },
            "PostApprovalSchema": {
                "type": "object",
                "properties": {
                    "approver": {
                        "type": "string",
                        "description": "Approver",
                        "example": "iVrVJ2uoXNF0wzcBzgl5"
                    },
                    "requesterNote": {
                        "type": "string",
                        "description": "Requester Notes",
                        "example": "Test suggestion"
                    },
                    "approverNote": {
                        "type": "string",
                        "description": "Approver Notes",
                        "example": "Test suggestion"
                    },
                    "approvalStatus": {
                        "type": "object",
                        "description": "Approval Status must be one of the following values: pending, approved, rejected, not_required",
                        "example": "approved"
                    }
                }
            },
            "RecurringPostSchema": {
                "type": "object",
                "properties": {
                    "recurrenceType": {
                        "type": "object",
                        "description": "recurrenceType is a Enum with values - day, week, month, year",
                        "example": "day"
                    },
                    "repeatEvery": {
                        "type": "number",
                        "description": "Repeat period",
                        "example": 2
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2026-08-20T14:15:22Z",
                        "description": "Start Date"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2026-08-24T14:15:22Z",
                        "description": "End Date"
                    },
                    "weekDays": {
                        "example": [],
                        "description": "Only required if recurrenceType is set to week",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "postTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Post Time",
                        "example": "2026-08-24T14:20:22Z"
                    }
                }
            },
            "TiktokPostSchema": {
                "type": "object",
                "properties": {
                    "privacyLevel": {
                        "type": "string",
                        "description": "privacy level must be one of the following values: PUBLIC_TO_EVERYONE, MUTUAL_FOLLOW_FRIENDS, SELF_ONLY",
                        "example": "PUBLIC_TO_EVERYONE"
                    },
                    "promoteOtherBrand": {
                        "type": "boolean",
                        "description": "promote other brand",
                        "example": true
                    },
                    "enableComment": {
                        "type": "boolean",
                        "description": "enable comment",
                        "example": true
                    },
                    "enableDuet": {
                        "type": "boolean",
                        "description": "enable duet",
                        "example": true
                    },
                    "enableStitch": {
                        "type": "boolean",
                        "description": "enable stitch",
                        "example": true
                    },
                    "videoDisclosure": {
                        "type": "boolean",
                        "description": "video disclosure",
                        "example": true
                    },
                    "promoteYourBrand": {
                        "type": "boolean",
                        "description": "promote your brand",
                        "example": true
                    }
                }
            },
            "DateSchema": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "number",
                        "example": 2022
                    },
                    "month": {
                        "type": "number",
                        "example": 1
                    },
                    "day": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "year",
                    "month",
                    "day"
                ]
            },
            "TimeSchema": {
                "type": "object",
                "properties": {
                    "hours": {
                        "type": "number",
                        "example": 23
                    },
                    "minutes": {
                        "type": "number",
                        "example": 56
                    },
                    "seconds": {
                        "type": "number",
                        "example": 34
                    }
                },
                "required": [
                    "hours",
                    "minutes",
                    "seconds"
                ]
            },
            "StartDateSchema": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "description": "Start Date",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateSchema"
                            }
                        ]
                    },
                    "startTime": {
                        "description": "Start Time",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeSchema"
                            }
                        ]
                    }
                }
            },
            "EndDateSchema": {
                "type": "object",
                "properties": {
                    "endDate": {
                        "description": "End Date",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateSchema"
                            }
                        ]
                    },
                    "endTime": {
                        "description": "End Time",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeSchema"
                            }
                        ]
                    }
                }
            },
            "GMBPostSchema": {
                "type": "object",
                "properties": {
                    "gmbEventType": {
                        "type": "string",
                        "example": "STANDARD",
                        "description": "gmbEventType must be one of the following values: STANDARD, EVENT, OFFER"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title",
                        "example": "Event Title"
                    },
                    "offerTitle": {
                        "type": "string",
                        "description": "Offer Title",
                        "example": "Hey"
                    },
                    "startDate": {
                        "description": "Start Date",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StartDateSchema"
                            }
                        ]
                    },
                    "endDate": {
                        "description": "End Title",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EndDateSchema"
                            }
                        ]
                    },
                    "termsConditions": {
                        "type": "string",
                        "description": "Terms Condition Url",
                        "example": "https://google.com/privacy"
                    },
                    "url": {
                        "type": "string",
                        "description": "Url",
                        "example": "https://google.com"
                    },
                    "couponCode": {
                        "type": "string",
                        "description": "Coupon Code",
                        "example": "BOGO-50"
                    },
                    "redeemOnlineUrl": {
                        "type": "string",
                        "description": "Redeem Online Url",
                        "example": "https://google.com"
                    },
                    "actionType": {
                        "type": "string",
                        "description": "Action Type must be one of the following values: none, order, book, shop, learn more, call, sign up",
                        "example": "book"
                    }
                }
            },
            "GetPostFormattedSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "61bb16833b3f2791f9715be2"
                    },
                    "source": {
                        "type": "string",
                        "description": "source must be one of the following values: composer, recurring, csv",
                        "enum": [
                            "composer",
                            "csv",
                            "recurring",
                            "review",
                            "rss"
                        ],
                        "example": "composer"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "platform": {
                        "type": "string",
                        "description": "platform must be one of the following values: google, facebook, instagram, linkedin, twitter, tiktok",
                        "example": "google"
                    },
                    "traceId": {
                        "type": "string",
                        "example": "Lx1EI6YIgQYMQi0ytFXv"
                    },
                    "displayDate": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-08-02T00:00:00.000Z"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-08-02T00:00:00.000Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-08-02T00:00:00.000Z"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Account Id",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "defaultThumb": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/test/test/media/test.jpeg"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error",
                        "example": "Failed due to auth token"
                    },
                    "postId": {
                        "type": "string",
                        "example": "323534534435"
                    },
                    "previewLink": {
                        "type": "string",
                        "example": "https://www.facebook.com/122104117118160911/posts/122131352522160911"
                    },
                    "primaryImage": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/test/test/media/test.jpeg"
                    },
                    "publishedAt": {
                        "type": "string",
                        "example": "2021-06-22T05:32:49.463Z"
                    },
                    "thumbnail": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/test/test/media/test.jpeg"
                    },
                    "subscriptionStatus": {
                        "type": "string",
                        "example": "processed"
                    },
                    "userIds": {
                        "description": "User Ids",
                        "example": [
                            "aF3KhyL8JIuBwzK3m7Ly_iVrVJ2uoXNF0wzcBzgl5_12554616564525983496"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "example": "Sample Summary"
                    },
                    "media": {
                        "description": "Post Media Data \n The limitations of media as per the platforms is provided through the reference link in API description",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostMediaSchema"
                        }
                    },
                    "status": {
                        "type": "object",
                        "description": "Status must be one of the following values: in_progress, draft, failed, published, scheduled, in_review, notification_sent, deleted",
                        "example": "published"
                    },
                    "createdBy": {
                        "type": "string",
                        "example": "Lx1EI6YIgQYMQi0ytFXv"
                    },
                    "type": {
                        "type": "object",
                        "description": "Post Type must be one of the following values: - post, story, reel",
                        "example": "post"
                    },
                    "scheduleTimeUpdated": {
                        "type": "boolean",
                        "description": "if schedule datetime is updated",
                        "example": true
                    },
                    "tags": {
                        "description": "Tag Ids",
                        "example": [
                            "aF3KhyL8JIuBwzK3m7Ly_iVrVJ2uoXNF0wzcBzgl5_12554616564525983496"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ogTagsDetails": {
                        "description": "Og Tags Meta Data",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OgTagsSchema"
                            }
                        ]
                    },
                    "postApprovalDetails": {
                        "description": "Post Approval Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostApprovalSchema"
                            }
                        ]
                    },
                    "recurringDetails": {
                        "description": "Recurring Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringPostSchema"
                            }
                        ]
                    },
                    "tiktokPostDetails": {
                        "description": "Tiktok Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TiktokPostSchema"
                            }
                        ]
                    },
                    "gmbPostDetails": {
                        "description": "GMB Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GMBPostSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "locationId",
                    "error",
                    "userIds",
                    "type"
                ]
            },
            "PostSuccessfulResponseSchema": {
                "type": "object",
                "properties": {
                    "posts": {
                        "description": "Post Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetPostFormattedSchema"
                        }
                    },
                    "count": {
                        "type": "number",
                        "example": 6
                    }
                }
            },
            "PostSuccessfulResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Posts"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostSuccessfulResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "RecurringPostDetailsSchema": {
                "type": "object",
                "properties": {
                    "recurrenceType": {
                        "type": "string",
                        "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "description": "recurrenceType is a Enum with values - day, week, month, year",
                        "example": "day"
                    },
                    "repeatEvery": {
                        "type": "number",
                        "description": "Repeat period",
                        "example": 2
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2026-08-20T18:30:00.000Z",
                        "description": "Start Date"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2026-08-24T18:30:00.000Z",
                        "description": "End Date"
                    },
                    "weekDays": {
                        "example": [],
                        "description": "Only required if recurrenceType is set to week",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "postTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Post Time",
                        "example": "2026-08-24T18:30:00.000Z"
                    }
                }
            },
            "PostCreateRequest": {
                "type": "object",
                "properties": {
                    "userIds": {
                        "description": "User Ids",
                        "example": [
                            "aF3KhyL8JIuBwzK3m7Ly_iVrVJ2uoXNF0wzcBzgl5_12554616564525983496"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "description": "Post Content \n The limitations of content as per the platforms is provided through the reference link in API description",
                        "example": "Hello World"
                    },
                    "media": {
                        "description": "Post Media Data \n The limitations of media as per the platforms is provided through the reference link in API description",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostMediaSchema"
                        }
                    },
                    "status": {
                        "type": "object",
                        "description": "Status must be one of the following values: in_progress, draft, failed, published, scheduled, in_review, notification_sent, deleted",
                        "example": "draft"
                    },
                    "scheduleDate": {
                        "type": "string",
                        "description": "Schedule Date"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Created By"
                    },
                    "followUpComment": {
                        "type": "string",
                        "description": "Follow Up Comment"
                    },
                    "ogTagsDetails": {
                        "description": "Og Tags Meta Data",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OgTagsSchema"
                            }
                        ]
                    },
                    "type": {
                        "type": "object",
                        "description": "Post Type must be one of the following values: - post, story, reel",
                        "example": "post"
                    },
                    "postApprovalDetails": {
                        "description": "Post Approval Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostApprovalSchema"
                            }
                        ]
                    },
                    "recurringDetails": {
                        "description": "Recurring Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringPostDetailsSchema"
                            }
                        ]
                    },
                    "scheduleTimeUpdated": {
                        "type": "boolean",
                        "description": "if schedule datetime is updated",
                        "example": true
                    },
                    "tags": {
                        "description": "Array of Tag Value",
                        "example": [
                            "Tag1"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "watermarkTemplateId": {
                        "type": "string",
                        "description": "Watermark template Id"
                    },
                    "applyWatermark": {
                        "type": "boolean",
                        "description": "Is Watermark Applied",
                        "example": true
                    },
                    "tiktokPostDetails": {
                        "description": "Tiktok Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TiktokPostSchema"
                            }
                        ]
                    },
                    "gmbPostDetails": {
                        "description": "GMB Post Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GMBPostSchema"
                            }
                        ]
                    },
                    "userId": {
                        "type": "string",
                        "description": "User ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone",
                        "example": "America/Chihuahua"
                    }
                },
                "required": [
                    "userIds",
                    "type"
                ]
            },
            "CreatePostSuccessfulResponseSchema": {
                "type": "object",
                "properties": {
                    "post": {
                        "description": "Post Data",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetPostFormattedSchema"
                            }
                        ]
                    }
                }
            },
            "CreatePostSuccessfulResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Created Post"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreatePostSuccessfulResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "GetPostSuccessfulResponseSchema": {
                "type": "object",
                "properties": {
                    "post": {
                        "description": "Post Data",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetPostFormattedSchema"
                            }
                        ]
                    }
                }
            },
            "GetPostSuccessfulResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Post"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetPostSuccessfulResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "UpdatePostSuccessfulResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Updated Post"
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "DeletePostSuccessfulResponseSchema": {
                "type": "object",
                "properties": {
                    "postId": {
                        "type": "string"
                    }
                }
            },
            "DeletePostSuccessfulResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Deleted Post"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeletePostSuccessfulResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "GetAccountSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "aF3KhyL8JIuBwzK3m7Ly_Lx1EI6YIgQYMQi0ytFXv_12554616564525983496"
                    },
                    "oauthId": {
                        "type": "string",
                        "example": "aF3KhyL8JIuBwzK3m7Ly"
                    },
                    "profileId": {
                        "type": "string",
                        "example": "aF3KhyL8JIuBwzK3m7Ly"
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Account"
                    },
                    "platform": {
                        "type": "string",
                        "description": "platform must be one of the following values: google, facebook, instagram, linkedin, twitter, tiktok",
                        "example": "google"
                    },
                    "type": {
                        "type": "string",
                        "example": "location"
                    },
                    "expire": {
                        "type": "string",
                        "example": "2024-03-11T19:29:59.785Z"
                    },
                    "isExpired": {
                        "type": "boolean",
                        "example": false
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "hasGoogleUpdated": true,
                            "canDelete": true
                        }
                    }
                }
            },
            "GetGroupSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Group Id",
                        "example": "6284c43d519161e96cc09c13"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of group",
                        "example": "Primary"
                    },
                    "accountIds": {
                        "example": [
                            "6494063f4260855c1c5776b5_mhoUgTPkz19vjF5Qu7Av_2774080328752823730"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "accountIds"
                ]
            },
            "AccountsListResponseSchema": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetAccountSchema"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetGroupSchema"
                        }
                    }
                }
            },
            "AccountsListResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Accounts"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountsListResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "DeleteAccountResponseSchema": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Location Id",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "example": "65fac446d599990d1313c1dd"
                    }
                }
            },
            "LocationAndAccountDeleteResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Deleted Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeleteAccountResponseSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "FacebookPageSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "name": {
                        "type": "string",
                        "example": "FB Page"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "isOwned": {
                        "type": "boolean",
                        "example": true
                    },
                    "isConnected": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "GetFacebookAccountsSchema": {
                "type": "object",
                "properties": {
                    "pages": {
                        "description": "Facebook Pages Details",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacebookPageSchema"
                        }
                    }
                }
            },
            "GetFacebookAccountsResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Facebook Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetFacebookAccountsSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachFBAccountDTO": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "page"
                    },
                    "originId": {
                        "type": "string",
                        "example": "244405****11687"
                    },
                    "name": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/2ad21ebc23/test"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                }
            },
            "SocialMediaFacebookAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "facebook"
                    },
                    "type": {
                        "type": "object",
                        "description": "type value must be page",
                        "example": "page"
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaFBAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Facebook Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaFacebookAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "GetGroupPagesSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    }
                }
            },
            "GetGroupPagesResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Facebook Groups"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetGroupPagesSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "GroupPageAttachDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Page Id",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "name": {
                        "type": "string",
                        "description": "Page Name",
                        "example": "Random Page"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Page Profile Pic",
                        "example": "https://graph.facebook.com/19xxxxxxxx/picture"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group Id",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "avatar",
                    "groupId"
                ]
            },
            "SocialMediaGrouopResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Facebook Group"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaFacebookAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "InstagramAccountSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "idu37swmmLbA02zgqKPpxITe2"
                    },
                    "name": {
                        "type": "string",
                        "example": "Insta account"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "avau37swmmLbA02zgqKPpxITe2"
                    },
                    "pageId": {
                        "type": "string",
                        "example": "pidu37swmmLbA02zgqKPpxITe2"
                    },
                    "isConnected": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "GetInstagramAccountsSchema": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "description": "Instagram Account Details",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstagramAccountSchema"
                        }
                    }
                }
            },
            "GetInstagramAccountsResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Instagram Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetInstagramAccountsSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachIGAccountDTO": {
                "type": "object",
                "properties": {
                    "originId": {
                        "type": "string",
                        "example": "244405****11687"
                    },
                    "name": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "pageId": {
                        "type": "string",
                        "example": "234234234242sd"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                },
                "required": [
                    "pageId"
                ]
            },
            "SocialMediaInstagramAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "instagram"
                    },
                    "type": {
                        "type": "object",
                        "example": "profile"
                    },
                    "name": {
                        "type": "string",
                        "example": "Profile Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaInstagramAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Instagram Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaInstagramAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "LinkedInPageSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Page ID",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "name": {
                        "type": "string",
                        "description": "LinkedIn Page Name",
                        "example": "Sample Name"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Profile Avatar url",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "urn": {
                        "type": "string",
                        "description": "URN"
                    },
                    "isConnected": {
                        "type": "boolean",
                        "description": "is connected to app",
                        "example": true
                    }
                }
            },
            "LinkedInProfileSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of profile",
                        "example": "Profile Name"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Profile avatar",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "urn": {
                        "type": "string",
                        "description": "URN"
                    },
                    "isConnected": {
                        "type": "boolean",
                        "description": "is connected to app",
                        "example": true
                    }
                }
            },
            "GetLinkedInAccountSchema": {
                "type": "object",
                "properties": {
                    "pages": {
                        "description": "LinkedIn Pages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedInPageSchema"
                        }
                    },
                    "profile": {
                        "description": "LinkedIn Profile Details",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedInProfileSchema"
                        }
                    }
                }
            },
            "GetLinkedInAccountsResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched LinkedIn Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetLinkedInAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachLinkedinAccountDTO": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "page",
                            "group",
                            "profile",
                            "location",
                            "business"
                        ]
                    },
                    "originId": {
                        "type": "string",
                        "example": "244405****11687"
                    },
                    "name": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                }
            },
            "SocialMediaLinkedInAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "linkedin"
                    },
                    "type": {
                        "type": "object",
                        "description": "type must be one of the following values: page, profile",
                        "example": "profile"
                    },
                    "name": {
                        "type": "string",
                        "example": "Profile Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaLinkedInAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added LinkedIn Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaLinkedInAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "TwitterProfileSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of profile",
                        "example": "ZHl1OWpfZEMyeWc5UjJOOU51RVNOal"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of profile",
                        "example": "Twitter Account name"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of profile",
                        "example": "sample_user"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Avatar of profile",
                        "example": "ZHl1OWpfZEMyeWc5UjJOOU51RVNOal"
                    },
                    "protected": {
                        "type": "boolean",
                        "description": "Is protected",
                        "example": true
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Is verified",
                        "example": true
                    },
                    "isConnected": {
                        "type": "boolean",
                        "description": "Is connected",
                        "example": true
                    }
                }
            },
            "GetTwitterAccountsSchema": {
                "type": "object",
                "properties": {
                    "profile": {
                        "description": "Twitter Profile Details",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TwitterProfileSchema"
                        }
                    }
                }
            },
            "GetTwitterAccountsResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Twitter Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetTwitterAccountsSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachTwitterAccountDTO": {
                "type": "object",
                "properties": {
                    "originId": {
                        "type": "string",
                        "example": "244405****11687"
                    },
                    "name": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "username": {
                        "type": "string",
                        "example": "user_name"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "protected": {
                        "type": "boolean",
                        "example": true
                    },
                    "verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                }
            },
            "SocialMediaTwitterAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "twitter"
                    },
                    "type": {
                        "type": "object",
                        "example": "profile"
                    },
                    "name": {
                        "type": "string",
                        "example": "Profile Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaTwitterAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Twitter Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaTwitterAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "TiktokProfileSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of account",
                        "example": "Account Name"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of account",
                        "example": "User_name"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Avatar of profile account",
                        "example": "w37swmmLbA02zgqKPpxITe"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Is verified",
                        "example": true
                    },
                    "isConnected": {
                        "type": "boolean",
                        "description": "Is connected",
                        "example": true
                    },
                    "type": {
                        "type": "object",
                        "description": "Tiktok Account Type must be one of the following values: business, profile",
                        "example": "BUSINESS"
                    }
                }
            },
            "GetTiktokAccountSchema": {
                "type": "object",
                "properties": {
                    "profile": {
                        "description": "Tiktok Business Account",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TiktokProfileSchema"
                        }
                    }
                }
            },
            "GetTiktokAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Tiktok Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetTiktokAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "AttachTiktokAccountDTO": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "page",
                            "group",
                            "profile",
                            "location",
                            "business"
                        ]
                    },
                    "originId": {
                        "type": "string",
                        "example": "244405****11687"
                    },
                    "name": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "username": {
                        "type": "string",
                        "example": "JOHN_DEO"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "sdfdsfdsfEWEsdfsdsW32dd"
                    }
                }
            },
            "SocialMediaTiktokAccountSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "65f2d989a4f2f1e5322c3856"
                    },
                    "oAuthId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "oldId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "originId": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "platform": {
                        "type": "object",
                        "example": "tiktok"
                    },
                    "type": {
                        "type": "object",
                        "description": "type must be one of the following values: profile, business",
                        "example": "profile"
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "u37swmmLbA02zgqKPpxITe2"
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "pageId": "u37swmmLbA02zgqKPpxITe2",
                            "page": {
                                "id": "u37swmmLbA02zgqKPpxITe2",
                                "name": "Account Name",
                                "avatar": "u37swmmLbA02zgqKPpxITe2"
                            },
                            "storeCode": "122",
                            "isVerified": "true",
                            "verified": true,
                            "protected": true,
                            "locationId": "u37swmmLbA02zgqKPpxITe2",
                            "accountId": "u37swmmLbA02zgqKPpxITe2",
                            "openId": "u37swmmLbA02zgqKPpxITe2",
                            "urn": "u37swmmLbA02zgqKPpxITe2",
                            "username": "testUser",
                            "storefrontAddress": {
                                "regionCode": "30021",
                                "languageCode": "E001",
                                "postalCode": "1221",
                                "administrativeArea": "Down Town",
                                "locality": "Louis Street",
                                "addressLines": [
                                    "207",
                                    "county"
                                ]
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "created date",
                        "example": "2024-03-14T11:03:37.015Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "updated date",
                        "example": "2024-03-14T11:03:37.015Z"
                    }
                }
            },
            "SocialMediaTiktokAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Added Tiktok Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SocialMediaTiktokAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            },
            "GetTiktokBusinessAccountSchema": {
                "type": "object",
                "properties": {
                    "profile": {
                        "description": "Tiktok Profile",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TiktokProfileSchema"
                        }
                    }
                }
            },
            "GetTiktokBusinessAccountResponseDTO": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Success or Failure",
                        "example": true
                    },
                    "statusCode": {
                        "type": "number",
                        "description": "Status Code",
                        "example": 201
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Fetched Tiktok Business Account"
                    },
                    "results": {
                        "description": "Requested Results",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetTiktokBusinessAccountSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "statusCode",
                    "message"
                ]
            }
        }
    }
}