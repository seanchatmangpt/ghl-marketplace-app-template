{
    "openapi": "3.0.0",
    "paths": {
        "/products/{productId}/price": {
            "post": {
                "operationId": "create-price-for-product",
                "summary": "Create Price for a Product",
                "description": "The \"Create Price for a Product\" API allows adding a new price associated with a specific product to the system. Use this endpoint to create a price with the specified details for a particular product. Ensure that the required information is provided in the request payload.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be used",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePriceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePriceResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Prices"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "get": {
                "operationId": "list-prices-for-product",
                "summary": "List Prices for a Product",
                "description": "The \"List Prices for a Product\" API allows retrieving a paginated list of prices associated with a specific product. Customize your results by filtering prices or paginate through the list using the provided query parameters.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be used",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "example": 20,
                        "description": "The maximum number of items to be included in a single page of results",
                        "schema": {
                            "default": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "example": 0,
                        "description": "The starting index of the page, indicating the position from which the results should be retrieved.",
                        "schema": {
                            "default": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "description": "To filter the response only with the given price ids, Please provide with comma separated",
                        "example": "6241712be68f7a98102ba272,632027d51f7876cd3020213d",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPricesResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Prices"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            }
        },
        "/products/{productId}/price/{priceId}": {
            "get": {
                "operationId": "get-price-by-id-for-product",
                "summary": "Get Price by ID for a Product",
                "description": "The \"Get Price by ID for a Product\" API allows retrieving information for a specific price associated with a particular product using its unique identifier. Use this endpoint to fetch details for a single price based on the provided price ID and product ID.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be used",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the price that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "location Id",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPriceResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Prices"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "put": {
                "operationId": "update-price-by-id-for-product",
                "summary": "Update Price by ID for a Product",
                "description": "The \"Update Price by ID for a Product\" API allows modifying information for a specific price associated with a particular product using its unique identifier. Use this endpoint to update details for a single price based on the provided price ID and product ID.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be used",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the price that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePriceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePriceResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Prices"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-price-by-id-for-product",
                "summary": "Delete Price by ID for a Product",
                "description": "The \"Delete Price by ID for a Product\" API allows deleting a specific price associated with a particular product using its unique identifier. Use this endpoint to remove a price from the system.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be used",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the price that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "location Id",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletePriceResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Prices"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            }
        },
        "/products/{productId}": {
            "get": {
                "operationId": "get-product-by-id",
                "summary": "Get Product by ID",
                "description": "The \"Get Product by ID\" API allows to retrieve information for a specific product using its unique identifier. Use this endpoint to fetch details for a single product based on the provided product ID.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "location Id",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-product-by-id",
                "summary": "Delete Product by ID",
                "description": "The \"Delete Product by ID\" API allows deleting a specific product using its unique identifier. Use this endpoint to remove a product from the system.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "location Id",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "put": {
                "operationId": "update-product-by-id",
                "summary": "Update Product by ID",
                "description": "The \"Update Product by ID\" API allows modifying information for a specific product using its unique identifier. Use this endpoint to update details for a single product based on the provided product ID.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "productId",
                        "required": true,
                        "in": "path",
                        "description": "ID of the product that needs to be returned",
                        "example": "6578278e879ad2646715ba9c",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            }
        },
        "/products/": {
            "post": {
                "operationId": "create-product",
                "summary": "Create Product",
                "description": "The \"Create Product\" API allows adding a new product to the system. Use this endpoint to create a product with the specified details. Ensure that the required information is provided in the request payload.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            },
            "get": {
                "operationId": "list-invoices",
                "summary": "List Products",
                "description": "The \"List Products\" API allows to retrieve a paginated list of products. Customize your results by filtering products based on name or paginate through the list using the provided query parameters. This endpoint provides a straightforward way to explore and retrieve product information.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "example": 20,
                        "description": "The maximum number of items to be included in a single page of results",
                        "schema": {
                            "default": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "example": 0,
                        "description": "The starting index of the page, indicating the position from which the results should be retrieved.",
                        "schema": {
                            "default": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "example": "3SwdhCu3svxI8AKsPJt6",
                        "description": "LocationId is the id of the sub-account",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "example": "Awesome product",
                        "description": "The name of the product for searching.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProductsResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "Location-Access": []
                    },
                    {
                        "Agency-Access": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "Products API",
        "description": "Documentation for products API",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Products",
            "description": "Documentation for products API"
        }
    ],
    "servers": [
        {
            "url": "https://services.leadconnectorhq.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Location-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Agency-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Company",
                "type": "http"
            }
        },
        "schemas": {
            "BadRequestDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad Request"
                    }
                }
            },
            "UnauthorizedDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "example": "Invalid token: access token is invalid"
                    },
                    "error": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                }
            },
            "RecurringDto": {
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string",
                        "description": "The interval at which the recurring event occurs.",
                        "example": "day",
                        "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                        ]
                    },
                    "intervalCount": {
                        "type": "number",
                        "description": "The number of intervals between each occurrence of the event.",
                        "example": 1
                    }
                },
                "required": [
                    "interval",
                    "intervalCount"
                ]
            },
            "MembershipOfferDto": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Membership offer label",
                        "example": "top_50"
                    },
                    "value": {
                        "type": "string",
                        "description": "Membership offer label",
                        "example": "50"
                    },
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the membership offer.",
                        "example": "655b33aa2209e60b6adb87a7"
                    }
                },
                "required": [
                    "label",
                    "value",
                    "_id"
                ]
            },
            "PriceMetaDto": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string",
                        "description": "The source of the price.",
                        "enum": [
                            "stripe"
                        ],
                        "example": "stripe"
                    },
                    "stripePriceId": {
                        "type": "string",
                        "description": "The Stripe price ID associated with the price.",
                        "example": "price_123"
                    },
                    "internalSource": {
                        "type": "string",
                        "description": "The internal source of the price.",
                        "enum": [
                            "agency_plan",
                            "funnel",
                            "membership"
                        ],
                        "example": "agency_plan"
                    }
                },
                "required": [
                    "source",
                    "stripePriceId",
                    "internalSource"
                ]
            },
            "CreatePriceDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Price Name"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price.",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency of the price.",
                        "example": "USD"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price. ( min: 0.01 )",
                        "example": 99.99
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the price."
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "trialPeriod": {
                        "type": "number",
                        "description": "The trial period duration in days (if applicable).",
                        "example": 7
                    },
                    "totalCycles": {
                        "type": "number",
                        "description": "The total number of billing cycles for the price. ( min: 1 )",
                        "example": 12
                    },
                    "setupFee": {
                        "type": "number",
                        "description": "The setup fee for the price.",
                        "example": 10.99
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "option_id_1",
                            "option_id_2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare at price for the price.",
                        "example": 19.99
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier of the location associated with the price.",
                        "example": "6578278e879ad2646715ba9c"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier of the user who created the price.",
                        "example": "6578278e879ad2646715ba9c"
                    },
                    "meta": {
                        "description": "Additional metadata associated with the price.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceMetaDto"
                            }
                        ]
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Need to track inventory stock quantity",
                        "example": true
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "name",
                    "type",
                    "currency",
                    "amount",
                    "locationId"
                ]
            },
            "CreatePriceResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the price.",
                        "example": "655b33aa2209e60b6adb87a7"
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "h4z7u0im2q8",
                            "h3nst2ltsnn"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "product": {
                        "type": "string",
                        "description": "The unique identifier for the associated product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Red / S"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price (e.g., one_time).",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency code for the price.",
                        "example": "INR"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price.",
                        "example": 199999
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the price.",
                        "example": "2023-11-20T10:23:38.645Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the price.",
                        "example": "2024-01-23T09:57:04.852Z"
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare-at price for comparison purposes.",
                        "example": 2000000
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Indicates whether inventory tracking is enabled.",
                        "example": null
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "type",
                    "currency",
                    "amount"
                ]
            },
            "UnprocessableDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 422
                    },
                    "message": {
                        "example": [
                            "Unprocessable Entity"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "error": {
                        "type": "string",
                        "example": "Unprocessable Entity"
                    }
                }
            },
            "DefaultPriceResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the price.",
                        "example": "655b33aa2209e60b6adb87a7"
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "h4z7u0im2q8",
                            "h3nst2ltsnn"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "product": {
                        "type": "string",
                        "description": "The unique identifier for the associated product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Red / S"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price (e.g., one_time).",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency code for the price.",
                        "example": "INR"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price.",
                        "example": 199999
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the price.",
                        "example": "2023-11-20T10:23:38.645Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the price.",
                        "example": "2024-01-23T09:57:04.852Z"
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare-at price for comparison purposes.",
                        "example": 2000000
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Indicates whether inventory tracking is enabled.",
                        "example": null
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "type",
                    "currency",
                    "amount"
                ]
            },
            "ListPricesResponseDto": {
                "type": "object",
                "properties": {
                    "prices": {
                        "description": "An array of prices",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DefaultPriceResponseDto"
                        }
                    },
                    "total": {
                        "type": "number",
                        "default": "Total number of prices available",
                        "example": 10
                    }
                },
                "required": [
                    "prices",
                    "total"
                ]
            },
            "GetPriceResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the price.",
                        "example": "655b33aa2209e60b6adb87a7"
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "h4z7u0im2q8",
                            "h3nst2ltsnn"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "product": {
                        "type": "string",
                        "description": "The unique identifier for the associated product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Red / S"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price (e.g., one_time).",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency code for the price.",
                        "example": "INR"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price.",
                        "example": 199999
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the price.",
                        "example": "2023-11-20T10:23:38.645Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the price.",
                        "example": "2024-01-23T09:57:04.852Z"
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare-at price for comparison purposes.",
                        "example": 2000000
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Indicates whether inventory tracking is enabled.",
                        "example": null
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "type",
                    "currency",
                    "amount"
                ]
            },
            "UpdatePriceDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Price Name"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price.",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency of the price.",
                        "example": "USD"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price. ( min: 0.01 )",
                        "example": 99.99
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the price."
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "trialPeriod": {
                        "type": "number",
                        "description": "The trial period duration in days (if applicable).",
                        "example": 7
                    },
                    "totalCycles": {
                        "type": "number",
                        "description": "The total number of billing cycles for the price. ( min: 1 )",
                        "example": 12
                    },
                    "setupFee": {
                        "type": "number",
                        "description": "The setup fee for the price.",
                        "example": 10.99
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "option_id_1",
                            "option_id_2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare at price for the price.",
                        "example": 19.99
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier of the location associated with the price.",
                        "example": "6578278e879ad2646715ba9c"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier of the user who created the price.",
                        "example": "6578278e879ad2646715ba9c"
                    },
                    "meta": {
                        "description": "Additional metadata associated with the price.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceMetaDto"
                            }
                        ]
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Need to track inventory stock quantity",
                        "example": true
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "name",
                    "type",
                    "currency",
                    "amount",
                    "locationId"
                ]
            },
            "UpdatePriceResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the price.",
                        "example": "655b33aa2209e60b6adb87a7"
                    },
                    "membershipOffers": {
                        "description": "An array of membership offers associated with the price.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MembershipOfferDto"
                        }
                    },
                    "variantOptionIds": {
                        "description": "An array of variant option IDs associated with the price.",
                        "example": [
                            "h4z7u0im2q8",
                            "h3nst2ltsnn"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "product": {
                        "type": "string",
                        "description": "The unique identifier for the associated product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the price.",
                        "example": "Red / S"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the price (e.g., one_time).",
                        "example": "one_time",
                        "enum": [
                            "one_time",
                            "recurring"
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency code for the price.",
                        "example": "INR"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the price.",
                        "example": 199999
                    },
                    "recurring": {
                        "description": "The recurring details of the price (if type is recurring).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringDto"
                            }
                        ]
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the price.",
                        "example": "2023-11-20T10:23:38.645Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the price.",
                        "example": "2024-01-23T09:57:04.852Z"
                    },
                    "compareAtPrice": {
                        "type": "number",
                        "description": "The compare-at price for comparison purposes.",
                        "example": 2000000
                    },
                    "trackInventory": {
                        "type": "boolean",
                        "description": "Indicates whether inventory tracking is enabled.",
                        "example": null
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Available inventory stock quantity",
                        "example": 5
                    },
                    "allowOutOfStockPurchases": {
                        "type": "boolean",
                        "description": "Continue selling when out of stock",
                        "example": true
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "type",
                    "currency",
                    "amount"
                ]
            },
            "DeletePriceResponseDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "returns true if the price is successfully deleted",
                        "example": true
                    }
                },
                "required": [
                    "status"
                ]
            },
            "ProductVariantOptionDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the option.",
                        "example": "h4z7u0im2q8"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the option.",
                        "example": "XL"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProductVariantDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for the variant.",
                        "example": "38s63qmxfr4"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the variant.",
                        "example": "Size"
                    },
                    "options": {
                        "description": "An array of options for the variant.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantOptionDto"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "options"
                ]
            },
            "ProductMediaDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the media.",
                        "example": "fzrgusiuu0m"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the media file.",
                        "example": "1dd7dcd0-e71d-4cf7-a06b-6d47723d6a29.png"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL where the media file is stored.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/sample.png"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the media file (e.g., image, video will be supporting soon).",
                        "example": "image",
                        "enum": [
                            "image",
                            "video"
                        ]
                    },
                    "isFeatured": {
                        "type": "boolean",
                        "description": "Indicates whether the media is featured.",
                        "example": true
                    }
                },
                "required": [
                    "id",
                    "url",
                    "type"
                ]
            },
            "GetProductResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "description": {
                        "type": "string",
                        "description": "product description",
                        "example": "This is a really awesome product"
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "productType": {
                        "type": "string",
                        "description": "The type of the product (e.g., PHYSICAL).",
                        "example": "PHYSICAL"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user who created the product.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the product.",
                        "example": "2023-11-20T10:23:36.515Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the product.",
                        "example": "2024-01-23T09:57:04.846Z"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    }
                },
                "required": [
                    "_id",
                    "locationId",
                    "name",
                    "productType",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "DeleteProductResponseDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "returns true if the product is successfully deleted",
                        "example": true
                    }
                },
                "required": [
                    "status"
                ]
            },
            "CreateProductDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the product.",
                        "example": "Product description goes here."
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "DIGITAL",
                            "PHYSICAL",
                            "SERVICE"
                        ]
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    }
                },
                "required": [
                    "name",
                    "locationId",
                    "productType"
                ]
            },
            "CreateProductResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "description": {
                        "type": "string",
                        "description": "product description",
                        "example": "This is a really awesome product"
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "productType": {
                        "type": "string",
                        "description": "The type of the product (e.g., PHYSICAL).",
                        "example": "PHYSICAL"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user who created the product.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the product.",
                        "example": "2023-11-20T10:23:36.515Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the product.",
                        "example": "2024-01-23T09:57:04.846Z"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    }
                },
                "required": [
                    "_id",
                    "locationId",
                    "name",
                    "productType",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "UpdateProductDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the product.",
                        "example": "Product description goes here."
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "DIGITAL",
                            "PHYSICAL",
                            "SERVICE"
                        ]
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    }
                },
                "required": [
                    "name",
                    "locationId",
                    "productType"
                ]
            },
            "UpdateProductResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "description": {
                        "type": "string",
                        "description": "product description",
                        "example": "This is a really awesome product"
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "productType": {
                        "type": "string",
                        "description": "The type of the product (e.g., PHYSICAL).",
                        "example": "PHYSICAL"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user who created the product.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the product.",
                        "example": "2023-11-20T10:23:36.515Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the product.",
                        "example": "2024-01-23T09:57:04.846Z"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    }
                },
                "required": [
                    "_id",
                    "locationId",
                    "name",
                    "productType",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "DefaultProductResponseDto": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the product.",
                        "example": "655b33a82209e60b6adb87a5"
                    },
                    "description": {
                        "type": "string",
                        "description": "product description",
                        "example": "This is a really awesome product"
                    },
                    "variants": {
                        "description": "An array of variants for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariantDto"
                        }
                    },
                    "medias": {
                        "description": "An array of medias for the product.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMediaDto"
                        }
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier for the location.",
                        "example": "3SwdhCsvxI8Au3KsPJt6"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product.",
                        "example": "Awesome Product"
                    },
                    "productType": {
                        "type": "string",
                        "description": "The type of the product (e.g., PHYSICAL).",
                        "example": "PHYSICAL"
                    },
                    "availableInStore": {
                        "type": "boolean",
                        "description": "Indicates whether the product is available in-store.",
                        "example": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user who created the product.",
                        "example": "6YAtzfzpmHAdj0e8GkKp"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The creation timestamp of the product.",
                        "example": "2023-11-20T10:23:36.515Z"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The last update timestamp of the product.",
                        "example": "2024-01-23T09:57:04.846Z"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "The statement descriptor for the product.",
                        "example": "abcde"
                    },
                    "image": {
                        "type": "string",
                        "description": "The URL for the product image.",
                        "example": "https://storage.googleapis.com/ghl-test/3SwdhCsvxI8Au3KsPJt6/media/65af8d5df88bdb4b1022ee90.png"
                    }
                },
                "required": [
                    "_id",
                    "locationId",
                    "name",
                    "productType",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "ListProductsStats": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "number",
                        "description": "Total number of products",
                        "example": 20
                    }
                },
                "required": [
                    "total"
                ]
            },
            "ListProductsResponseDto": {
                "type": "object",
                "properties": {
                    "products": {
                        "description": "An array of products",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DefaultProductResponseDto"
                        }
                    },
                    "total": {
                        "description": "list products status",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListProductsStats"
                        }
                    }
                },
                "required": [
                    "products",
                    "total"
                ]
            }
        }
    }
}