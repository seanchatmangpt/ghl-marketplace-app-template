{
    "openapi": "3.0.0",
    "info": {
        "title": "Conversations API",
        "description": "Documentation for Conversations API",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Conversations",
            "description": "Documentation for Conversations API"
        },
        {
            "name": "Search",
            "description": "Documentation for Conversations API"
        }
    ],
    "servers": [
        {
            "url": "https://services.leadconnectorhq.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Location-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Agency-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Company",
                "type": "http"
            }
        },
        "schemas": {
            "BadRequestDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad Request"
                    }
                }
            },
            "UnauthorizedDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "example": "Invalid token: access token is invalid"
                    },
                    "error": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                }
            },
            "StartAfterNumberSchema": {
                "type": "object",
                "properties": {
                    "startAfterDate": {
                        "type": "number",
                        "description": "Search to begin after the specified date - should contain the sort value of the last document",
                        "example": 1600854
                    }
                }
            },
            "StartAfterArrayNumberSchema": {
                "type": "object",
                "properties": {
                    "startAfterDate": {
                        "description": "Search to begin after the specified date - should contain the sort value of the last document",
                        "example": [
                            1600854,
                            1600851
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ConversationSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Conversation Id",
                        "example": "ABCHkzuJQ8ZMd4Te84GK"
                    },
                    "contactId": {
                        "type": "string",
                        "description": "Contact Id",
                        "example": "ABCHkzuJQ8ZMd4Te84GK"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location Id",
                        "example": "ABCHkzuJQ8ZMd4Te84GK"
                    },
                    "lastMessageBody": {
                        "type": "string",
                        "description": "Last Message Body of the conversation",
                        "example": "This is a sample message body"
                    },
                    "lastMessageType": {
                        "type": "string",
                        "description": "Last message type of the conversation",
                        "example": "TYPE_SMS",
                        "enum": [
                            "TYPE_CALL",
                            "TYPE_SMS",
                            "TYPE_EMAIL",
                            "TYPE_SMS_REVIEW_REQUEST",
                            "TYPE_WEBCHAT",
                            "TYPE_SMS_NO_SHOW_REQUEST",
                            "TYPE_CAMPAIGN_SMS",
                            "TYPE_CAMPAIGN_CALL",
                            "TYPE_CAMPAIGN_EMAIL",
                            "TYPE_CAMPAIGN_VOICEMAIL",
                            "TYPE_FACEBOOK",
                            "TYPE_CAMPAIGN_FACEBOOK",
                            "TYPE_CAMPAIGN_MANUAL_CALL",
                            "TYPE_CAMPAIGN_MANUAL_SMS",
                            "TYPE_GMB",
                            "TYPE_CAMPAIGN_GMB",
                            "TYPE_REVIEW",
                            "TYPE_INSTAGRAM",
                            "TYPE_WHATSAPP",
                            "TYPE_CUSTOM_SMS",
                            "TYPE_CUSTOM_EMAIL",
                            "TYPE_CUSTOM_PROVIDER_SMS",
                            "TYPE_CUSTOM_PROVIDER_EMAIL",
                            "TYPE_IVR_CALL",
                            "TYPE_ACTIVITY_CONTACT",
                            "TYPE_ACTIVITY_INVOICE",
                            "TYPE_ACTIVITY_PAYMENT",
                            "TYPE_ACTIVITY_OPPORTUNITY",
                            "TYPE_LIVE_CHAT",
                            "TYPE_LIVE_CHAT_INFO_MESSAGE",
                            "TYPE_ACTIVITY_APPOINTMENT",
                            "TYPE_FACEBOOK_COMMENT",
                            "TYPE_INSTAGRAM_COMMENT",
                            "TYPE_ACTIVITY"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the conversation",
                        "example": "TYPE_PHONE",
                        "enum": [
                            "TYPE_PHONE",
                            "TYPE_EMAIL",
                            "TYPE_FB_MESSENGER",
                            "TYPE_REVIEW"
                        ]
                    },
                    "unreadCount": {
                        "type": "number",
                        "description": "Unread count of the messages in the conversation",
                        "example": 1
                    },
                    "fullName": {
                        "type": "string",
                        "description": "Full name of the contact",
                        "example": "John Doe"
                    },
                    "contactName": {
                        "type": "string",
                        "description": "Name of the contact in case the Full Name is missing, may contain the company name or the contact email",
                        "example": "John Doe Company"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the contact",
                        "example": "johndoe@mailingdomain.com"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number of the contact",
                        "example": "+15550001234"
                    }
                },
                "required": [
                    "id",
                    "contactId",
                    "locationId",
                    "lastMessageBody",
                    "lastMessageType",
                    "type",
                    "unreadCount",
                    "fullName",
                    "contactName",
                    "email",
                    "phone"
                ]
            },
            "SendConversationResponseDto": {
                "type": "object",
                "properties": {
                    "conversations": {
                        "description": "The list of all conversations found for the given query",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConversationSchema"
                        }
                    },
                    "total": {
                        "type": "number",
                        "description": "Total Number of results found for the given query",
                        "example": 100
                    }
                },
                "required": [
                    "conversations",
                    "total"
                ]
            },
            "CreateConversationDto": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Location ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "contactId": {
                        "type": "string",
                        "description": "Contact ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    }
                },
                "required": [
                    "locationId",
                    "contactId"
                ]
            },
            "ConversationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Contact ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "contactId": {
                        "type": "string",
                        "description": "Contact ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "assignedTo": {
                        "type": "string",
                        "description": "Assigned User ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "lastMessageBody": {
                        "type": "string",
                        "description": "Last message body as string",
                        "example": "Hello, this is the message body"
                    },
                    "lastMessageDate": {
                        "type": "string",
                        "description": "Last message date as UTC",
                        "example": "1628008053263"
                    },
                    "lastMessageType": {
                        "type": "string",
                        "description": "Type of the last message sent/receieved in the conversation.",
                        "enum": [
                            "TYPE_CALL",
                            "TYPE_SMS",
                            "TYPE_EMAIL",
                            "TYPE_SMS_REVIEW_REQUEST",
                            "TYPE_WEBCHAT",
                            "TYPE_SMS_NO_SHOW_REQUEST",
                            "TYPE_CAMPAIGN_SMS",
                            "TYPE_CAMPAIGN_CALL",
                            "TYPE_CAMPAIGN_EMAIL",
                            "TYPE_CAMPAIGN_VOICEMAIL",
                            "TYPE_FACEBOOK",
                            "TYPE_CAMPAIGN_FACEBOOK",
                            "TYPE_CAMPAIGN_MANUAL_CALL",
                            "TYPE_CAMPAIGN_MANUAL_SMS",
                            "TYPE_GMB",
                            "TYPE_CAMPAIGN_GMB",
                            "TYPE_REVIEW",
                            "TYPE_INSTAGRAM",
                            "TYPE_WHATSAPP",
                            "TYPE_CUSTOM_SMS",
                            "TYPE_CUSTOM_EMAIL",
                            "TYPE_CUSTOM_PROVIDER_SMS",
                            "TYPE_CUSTOM_PROVIDER_EMAIL",
                            "TYPE_IVR_CALL",
                            "TYPE_ACTIVITY_CONTACT",
                            "TYPE_ACTIVITY_INVOICE",
                            "TYPE_ACTIVITY_PAYMENT",
                            "TYPE_ACTIVITY_OPPORTUNITY",
                            "TYPE_LIVE_CHAT",
                            "TYPE_LIVE_CHAT_INFO_MESSAGE",
                            "TYPE_ACTIVITY_APPOINTMENT",
                            "TYPE_FACEBOOK_COMMENT",
                            "TYPE_INSTAGRAM_COMMENT",
                            "TYPE_ACTIVITY"
                        ],
                        "example": "TYPE_CALL"
                    },
                    "unreadCount": {
                        "type": "number",
                        "description": "Count of unread messages in the conversation",
                        "example": 1
                    },
                    "inbox": {
                        "type": "boolean",
                        "description": "Inbox status of the conversation.",
                        "example": true
                    },
                    "starred": {
                        "type": "boolean",
                        "description": "Starred status of the conversation.",
                        "example": true
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Deleted status of the conversation.",
                        "example": false
                    }
                },
                "required": [
                    "locationId",
                    "contactId",
                    "deleted"
                ]
            },
            "GetConversationSuccessfulResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Boolean value as the API response.",
                        "example": true
                    },
                    "conversation": {
                        "description": "Conversation data of the provided conversation ID.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConversationDto"
                            }
                        ]
                    }
                },
                "required": [
                    "success",
                    "conversation"
                ]
            },
            "GetConversationByIdResponse": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "inbox": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "number"
                    },
                    "unreadCount": {
                        "type": "number"
                    },
                    "assignedTo": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "starred": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "contactId",
                    "locationId",
                    "deleted",
                    "inbox",
                    "type",
                    "unreadCount",
                    "assignedTo",
                    "id"
                ]
            },
            "UpdateConversationDto": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Location ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6"
                    },
                    "unreadCount": {
                        "type": "number",
                        "description": "Count of unread messages in the conversation",
                        "example": 1
                    },
                    "starred": {
                        "type": "boolean",
                        "description": "Starred status of the conversation.",
                        "example": true
                    },
                    "feedback": {
                        "type": "object"
                    }
                },
                "required": [
                    "locationId"
                ]
            },
            "DeleteConversationSuccessfulResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Boolean value as the API response.",
                        "example": true
                    }
                },
                "required": [
                    "success"
                ]
            },
            "GetEmailMessageResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "altId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "description": "External Id"
                    },
                    "threadId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "description": "Message Id or thread Id"
                    },
                    "locationId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "contactId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "conversationId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "dateAdded": {
                        "type": "string",
                        "example": "2024-03-27T18:13:49.000Z"
                    },
                    "subject": {
                        "type": "string",
                        "example": "Order confirm"
                    },
                    "body": {
                        "type": "string",
                        "example": "Hi there"
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "inbound",
                            "outbound"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "scheduled",
                            "sent",
                            "delivered",
                            "read",
                            "undelivered",
                            "connected",
                            "failed",
                            "opened"
                        ]
                    },
                    "contentType": {
                        "type": "string",
                        "example": "text/plain"
                    },
                    "attachments": {
                        "description": "An array of attachment URLs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "provider": {
                        "type": "string",
                        "examples": [
                            "Leadconnector Gmail",
                            "mailgun",
                            "smtp",
                            "custom"
                        ]
                    },
                    "from": {
                        "type": "string",
                        "description": "Name and Email Id of the sender"
                    },
                    "to": {
                        "description": "List of email Ids of the receivers",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cc": {
                        "description": "List of email Ids of the people in the cc field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bcc": {
                        "description": "List of email Ids of the people in the bcc field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "replyToMessageId": {
                        "type": "string",
                        "description": "In case of reply, email message Id of the reply to email"
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "workflow",
                            "bulk_actions",
                            "campaign",
                            "api",
                            "app"
                        ],
                        "description": "Email Message source"
                    }
                },
                "required": [
                    "id",
                    "threadId",
                    "locationId",
                    "contactId",
                    "conversationId",
                    "dateAdded",
                    "body",
                    "direction",
                    "contentType",
                    "from",
                    "to"
                ]
            },
            "CancelScheduledResponseDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "description": "HTTP Status code of the request",
                        "example": 404
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message of the request",
                        "example": "Failed cancel the scheduled message"
                    }
                },
                "required": [
                    "status",
                    "message"
                ]
            },
            "GetMessageResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "type": {
                        "type": "number",
                        "example": 1
                    },
                    "locationId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "contactId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "conversationId": {
                        "type": "string",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "dateAdded": {
                        "type": "string",
                        "example": "2024-03-27T18:13:49.000Z"
                    },
                    "body": {
                        "type": "string",
                        "example": "Hi there"
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "inbound",
                            "outbound"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "scheduled",
                            "sent",
                            "delivered",
                            "read",
                            "undelivered",
                            "connected",
                            "failed",
                            "opened"
                        ]
                    },
                    "contentType": {
                        "type": "string",
                        "example": "text/plain"
                    },
                    "attachments": {
                        "description": "An array of attachment URLs. Attachments will be empty for Call and Voicemails, type 1 and 10. Please use get call recording API to fetch call recording and voicemails.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "email": {
                                "messageIds": [
                                    "p1mRSHeLDhAms5q0LMr4"
                                ]
                            }
                        },
                        "description": "meta will contain email, for message type 3 (email). messageIds is list of all email message ids under the message thread"
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "workflow",
                            "bulk_actions",
                            "campaign",
                            "api",
                            "app"
                        ],
                        "description": "Message source"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "locationId",
                    "contactId",
                    "conversationId",
                    "dateAdded",
                    "direction",
                    "contentType"
                ]
            },
            "GetMessagesByConversationResponseDto": {
                "type": "object",
                "properties": {
                    "lastMessageId": {
                        "type": "string",
                        "description": "Id of the last message in the messages array",
                        "example": "p1mRSHeLDhAms5q0LMr4"
                    },
                    "nextPage": {
                        "type": "boolean",
                        "description": "Next page value true indicates only 20 message is in the response. Rest of the messages are in the next page. Please use the lastMessageId value in the query to get the next page messages",
                        "example": true
                    },
                    "messages": {
                        "description": "Array of messages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetMessageResponseDto"
                        }
                    }
                },
                "required": [
                    "lastMessageId",
                    "nextPage",
                    "messages"
                ]
            },
            "SendMessageBodyDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "SMS",
                            "Email",
                            "WhatsApp",
                            "GMB",
                            "IG",
                            "FB",
                            "Custom",
                            "Live_Chat"
                        ]
                    },
                    "contactId": {
                        "type": "string"
                    },
                    "appointmentId": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emailFrom": {
                        "type": "string"
                    },
                    "emailCc": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emailBcc": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "html": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "replyMessageId": {
                        "type": "string",
                        "description": "Specify the emailId on which the reply needs to go out"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "scheduledTimestamp": {
                        "type": "number",
                        "description": "UTC Timestamp (in seconds) at which the message should be scheduled",
                        "example": 1669287863
                    },
                    "conversationProviderId": {
                        "type": "string"
                    },
                    "emailTo": {
                        "type": "string",
                        "description": "`emailTo` field is used when you want to send the email to a different email address than the contact's primary email."
                    },
                    "emailReplyMode": {
                        "type": "string",
                        "enum": [
                            "reply",
                            "reply_all"
                        ]
                    }
                },
                "required": [
                    "type",
                    "contactId"
                ]
            },
            "SendMessageResponseDto": {
                "type": "object",
                "properties": {
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation ID.",
                        "example": "ABC12h2F6uBrIkfXYazb"
                    },
                    "emailMessageId": {
                        "type": "string",
                        "description": "This contains the email message id (only for Email type). Use this ID to send inbound replies to GHL to create a threaded email.",
                        "example": "rnGyqh2F6uBrIkfhFo9A"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "This is the main Message ID",
                        "example": "t22c6DQcTDf3MjRhwf77"
                    },
                    "messageIds": {
                        "description": "When sending via the GMB channel, we will be returning list of `messageIds` instead of single `messageId`.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "type": "string",
                        "description": "Additional response message when sending a workflow message",
                        "example": "Message queued successfully."
                    }
                },
                "required": [
                    "conversationId",
                    "messageId"
                ]
            },
            "CallDataDTO": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Phone number of the receiver",
                        "example": "+15037081210"
                    },
                    "from": {
                        "type": "string",
                        "description": "Phone number of the dialer",
                        "example": "+15037081210"
                    }
                },
                "required": [
                    "to",
                    "from"
                ]
            },
            "ProcessMessageBodyDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Message Type",
                        "example": "SMS",
                        "enum": [
                            "SMS",
                            "Email",
                            "WhatsApp",
                            "GMB",
                            "IG",
                            "FB",
                            "Custom",
                            "WebChat",
                            "Live_Chat",
                            "Call"
                        ]
                    },
                    "attachments": {
                        "description": "Array of attachments",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Message Body"
                    },
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation Id",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "conversationProviderId": {
                        "type": "string",
                        "description": "Conversation Provider Id",
                        "example": "61d6d1f9cdac7612faf80753"
                    },
                    "html": {
                        "type": "string",
                        "description": "HTML Body of Email"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of the Email"
                    },
                    "emailFrom": {
                        "type": "string",
                        "description": "From Email Address"
                    },
                    "emailTo": {
                        "type": "string",
                        "description": "To Email Address"
                    },
                    "emailCc": {
                        "description": "List of email address to CC",
                        "example": [
                            "john1@doe.com",
                            "john2@doe.com"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emailBcc": {
                        "description": "List of email address to BCC",
                        "example": [
                            "john1@doe.com",
                            "john2@doe.com"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emailMessageId": {
                        "type": "string",
                        "description": "Send the email message id for which this email should be threaded. This is for replying to a specific email"
                    },
                    "altId": {
                        "type": "string",
                        "description": "external mail provider's message id",
                        "example": "61d6d1f9cdac7612faf80753"
                    },
                    "direction": {
                        "type": "object",
                        "description": "Message direction, if required can be set manually, default is outbound",
                        "default": "outbound",
                        "example": [
                            "outbound",
                            "inbound"
                        ]
                    },
                    "date": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date of the inbound message"
                    },
                    "call": {
                        "description": "Phone call dialer and receiver information",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CallDataDTO"
                            }
                        ]
                    }
                },
                "required": [
                    "type",
                    "conversationId",
                    "conversationProviderId"
                ]
            },
            "ProcessMessageResponseDto": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation ID.",
                        "example": "ABC12h2F6uBrIkfXYazb"
                    },
                    "messageId": {
                        "type": "string",
                        "description": "This is the main Message ID",
                        "example": "t22c6DQcTDf3MjRhwf77"
                    },
                    "message": {
                        "type": "string"
                    },
                    "contactId": {
                        "type": "string"
                    },
                    "dateAdded": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "emailMessageId": {
                        "type": "string"
                    }
                },
                "required": [
                    "success",
                    "conversationId",
                    "messageId",
                    "message"
                ]
            },
            "UploadFilesDto": {
                "type": "object",
                "properties": {
                    "conversationId": {
                        "type": "string",
                        "description": "Conversation Id",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "attachmentUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "conversationId",
                    "locationId",
                    "attachmentUrls"
                ]
            },
            "UploadFilesResponseDto": {
                "type": "object",
                "properties": {
                    "uploadedFiles": {
                        "type": "object"
                    }
                },
                "required": [
                    "uploadedFiles"
                ]
            },
            "UploadFilesErrorResponseDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "description": "HTTP Status code of the request",
                        "example": 413,
                        "enum": [
                            400,
                            413,
                            415
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message of the request",
                        "example": "Failed to upload the files"
                    }
                },
                "required": [
                    "status",
                    "message"
                ]
            },
            "ErrorDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Error Code",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Error Type",
                        "example": "saas"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error Message",
                        "example": "There was an error from the provider"
                    }
                },
                "required": [
                    "code",
                    "type",
                    "message"
                ]
            },
            "UpdateMessageStatusDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Message status",
                        "example": "read",
                        "enum": [
                            "answered",
                            "busy",
                            "canceled",
                            "completed",
                            "failed",
                            "no-answer",
                            "pending",
                            "delivered",
                            "read"
                        ]
                    },
                    "error": {
                        "description": "Error object from the conversation provider",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ErrorDto"
                            }
                        ]
                    },
                    "emailMessageId": {
                        "type": "string",
                        "description": "Email message Id",
                        "example": "ve9EPM428h8vShlRW1KT"
                    },
                    "recipients": {
                        "description": "Email delivery status for additional email recipients.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "status"
                ]
            }
        }
    },
    "paths": {
        "/conversations/search": {
            "get": {
                "operationId": "search-conversation",
                "summary": "Search Conversations",
                "description": "Returns a list of all conversations matching the search criteria along with the sort and filter options selected.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "query",
                        "description": "Location Id",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contactId",
                        "required": false,
                        "in": "query",
                        "description": "Contact Id",
                        "example": "9VEmS0si86GW6gXWU89b",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assignedTo",
                        "required": false,
                        "in": "query",
                        "description": "Assigned to user Id. Multiple values are comma separated. \"unassigned\" is used to fetch all unassigned conversations",
                        "example": "ABCHkzuJQ8ZMd4Te84GK,fGiae4CHkzoskh8thsik",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "required": false,
                        "in": "query",
                        "description": "Search paramater as a string",
                        "example": "Search string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sort paramater - asc or desc",
                        "example": "asc",
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "startAfterDate",
                        "required": false,
                        "in": "query",
                        "description": "Search to begin after the specified date - should contain the sort value of the last document",
                        "example": 1600854,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StartAfterNumberSchema"
                            },
                            {
                                "$ref": "#/components/schemas/StartAfterArrayNumberSchema"
                            }
                        ],
                        "schema": {
                            "type": "any"
                        }
                    },
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "Id of the conversation",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Limit of conversations - Default is 20",
                        "example": 20,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lastMessageType",
                        "required": false,
                        "in": "query",
                        "description": "Type of the last message in the conversation as a string",
                        "example": "TYPE_SMS",
                        "schema": {
                            "enum": [
                                "TYPE_CALL",
                                "TYPE_SMS",
                                "TYPE_EMAIL",
                                "TYPE_SMS_REVIEW_REQUEST",
                                "TYPE_WEBCHAT",
                                "TYPE_SMS_NO_SHOW_REQUEST",
                                "TYPE_CAMPAIGN_SMS",
                                "TYPE_CAMPAIGN_CALL",
                                "TYPE_CAMPAIGN_EMAIL",
                                "TYPE_CAMPAIGN_VOICEMAIL",
                                "TYPE_FACEBOOK",
                                "TYPE_CAMPAIGN_FACEBOOK",
                                "TYPE_CAMPAIGN_MANUAL_CALL",
                                "TYPE_CAMPAIGN_MANUAL_SMS",
                                "TYPE_GMB",
                                "TYPE_CAMPAIGN_GMB",
                                "TYPE_REVIEW",
                                "TYPE_INSTAGRAM",
                                "TYPE_WHATSAPP",
                                "TYPE_CUSTOM_SMS",
                                "TYPE_CUSTOM_EMAIL",
                                "TYPE_CUSTOM_PROVIDER_SMS",
                                "TYPE_CUSTOM_PROVIDER_EMAIL",
                                "TYPE_IVR_CALL",
                                "TYPE_ACTIVITY_CONTACT",
                                "TYPE_ACTIVITY_INVOICE",
                                "TYPE_ACTIVITY_PAYMENT",
                                "TYPE_ACTIVITY_OPPORTUNITY",
                                "TYPE_LIVE_CHAT",
                                "TYPE_LIVE_CHAT_INFO_MESSAGE",
                                "TYPE_ACTIVITY_APPOINTMENT",
                                "TYPE_FACEBOOK_COMMENT",
                                "TYPE_INSTAGRAM_COMMENT",
                                "TYPE_ACTIVITY"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastMessageAction",
                        "required": false,
                        "in": "query",
                        "description": "Action of the last outbound message in the conversation as string.",
                        "example": "manual",
                        "schema": {
                            "enum": [
                                "automated",
                                "manual"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastMessageDirection",
                        "required": false,
                        "in": "query",
                        "description": "Direction of the last message in the conversation as string.",
                        "example": "inbound",
                        "schema": {
                            "enum": [
                                "inbound",
                                "outbound"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "The status of the conversation to be filtered - all, read, unread, starred ",
                        "example": "all",
                        "schema": {
                            "enum": [
                                "all",
                                "read",
                                "unread",
                                "starred",
                                "recents"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "The sorting of the conversation to be filtered as - manual messages or all messages",
                        "example": "last_message_date",
                        "schema": {
                            "enum": [
                                "last_manual_message_date",
                                "last_message_date",
                                "score_profile"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortScoreProfile",
                        "required": false,
                        "in": "query",
                        "description": "Id of score profile on which sortBy.ScoreProfile should sort on",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scoreProfile",
                        "required": false,
                        "in": "query",
                        "description": "Id of score profile on which conversations should get filtered out, works with scoreProfileMin & scoreProfileMax",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scoreProfileMin",
                        "required": false,
                        "in": "query",
                        "description": "Minimum value for score",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "scoreProfileMax",
                        "required": false,
                        "in": "query",
                        "description": "Maximum value for score",
                        "example": "ABCHkzuJQ8ZMd4Te84GK",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the conversations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendConversationResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/{conversationId}": {
            "get": {
                "operationId": "get-conversation",
                "summary": "Get Conversation",
                "description": "Get the conversation details based on the conversation ID",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "conversationId",
                        "required": true,
                        "in": "path",
                        "description": "Conversation ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConversationByIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Conversations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "update-conversation",
                "summary": "Update Conversation",
                "description": "Update the conversation details based on the conversation ID",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "conversationId",
                        "required": true,
                        "in": "path",
                        "description": "Conversation ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConversationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConversationSuccessfulResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Conversations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-conversation",
                "summary": "Delete Conversation",
                "description": "Delete the conversation details based on the conversation ID",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "conversationId",
                        "required": true,
                        "in": "path",
                        "description": "Conversation ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteConversationSuccessfulResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Conversations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/email/{id}": {
            "get": {
                "operationId": "get-email-by-id",
                "summary": "Get email by Id",
                "description": "Get email by Id",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email object for the id given.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEmailMessageResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Email"
                ]
            }
        },
        "/conversations/messages/email/{emailMessageId}/schedule": {
            "delete": {
                "operationId": "cancel-scheduled-email-message",
                "summary": "Cancel a scheduled email message.",
                "description": "Post the messageId for the API to delete a scheduled email message. <br />",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "emailMessageId",
                        "required": true,
                        "in": "path",
                        "description": "Email Message Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The scheduled email message was cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CancelScheduledResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Email"
                ]
            }
        },
        "/conversations/messages/{id}": {
            "get": {
                "operationId": "get-message",
                "summary": "Get message by message id",
                "description": "Get message by message id.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message object for the id given.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMessageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/{conversationId}/messages": {
            "get": {
                "operationId": "get-messages",
                "summary": "Get messages by conversation id",
                "description": "Get messages by conversation id.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "conversationId",
                        "required": true,
                        "in": "path",
                        "description": "Conversation ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastMessageId",
                        "required": false,
                        "in": "query",
                        "description": "Message ID of the last message in the list as a string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of messages to be fetched from the conversation. Default limit is 20",
                        "example": 20,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "description": "Types of message to fetched separated with comma",
                        "example": "TYPE_SMS,TYPE_CALL",
                        "schema": {
                            "enum": [
                                "TYPE_CALL",
                                "TYPE_SMS",
                                "TYPE_EMAIL",
                                "TYPE_FACEBOOK",
                                "TYPE_GMB",
                                "TYPE_INSTAGRAM",
                                "TYPE_WHATSAPP",
                                "TYPE_ACTIVITY_CONTACT",
                                "TYPE_ACTIVITY_INVOICE",
                                "TYPE_ACTIVITY_PAYMENT",
                                "TYPE_ACTIVITY_OPPORTUNITY",
                                "TYPE_LIVE_CHAT",
                                "TYPE_ACTIVITY_APPOINTMENT"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages for the conversation id of the given type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMessagesByConversationResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages": {
            "post": {
                "operationId": "send-a-new-message",
                "summary": "Send a new message",
                "description": "Post the necessary fields for the API to send a new message.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendMessageBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created the message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendMessageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/inbound": {
            "post": {
                "operationId": "add-an-inbound-message",
                "summary": "Add an inbound message",
                "description": "Post the necessary fields for the API to add a new inbound message. <br />",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessMessageBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created the message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessMessageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/{messageId}/schedule": {
            "delete": {
                "operationId": "cancel-scheduled-message",
                "summary": "Cancel a scheduled message.",
                "description": "Post the messageId for the API to delete a scheduled message. <br />",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "description": "Message Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The scheduled message was cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CancelScheduledResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/upload": {
            "post": {
                "operationId": "upload-file-attachments",
                "summary": "Upload file attachments",
                "description": "Post the necessary fields for the API to upload files. The files need to be a buffer with the key \"fileAttachment\". <br /><br /> The allowed file types are: <br> <ul><li>JPG</li><li>JPEG</li><li>PNG</li><li>MP4</li><li>MPEG</li><li>ZIP</li><li>RAR</li><li>PDF</li><li>DOC</li><li>DOCX</li><li>TXT</li></ul> <br /><br /> The API will return an object with the URLs",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadFilesDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Uploaded the file successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFilesResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload Too Large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFilesErrorResponseDto"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFilesErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/{messageId}/status": {
            "put": {
                "operationId": "update-message-status",
                "summary": "Update message status",
                "description": "Post the necessary fields for the API to update message status.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "description": "Message Id",
                        "example": "ve9EPM428h8vShlRW1KT",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageStatusDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created the message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendMessageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/conversations/messages/{messageId}/locations/{locationId}/recording": {
            "get": {
                "operationId": "get-message-recording",
                "summary": "Get Recording by Message ID",
                "description": "Get the recording for a message by passing the message id",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    },
                    {
                        "name": "locationId",
                        "required": true,
                        "in": "path",
                        "description": "Location ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "description": "Message ID as string",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gives the attached recording to the message",
                        "headers": {
                            "Content-Type": {
                                "description": "audio/x-wav"
                            },
                            "Content-Disposition": {
                                "description": "Attachment; filename=audio.wav"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Messages"
                ],
                "security": [
                    {
                        "bearer": []
                    },
                    {
                        "Location-Access": []
                    }
                ]
            }
        },
        "/conversations/": {
            "post": {
                "operationId": "create-conversation",
                "summary": "Create Conversation",
                "description": "Creates a new conversation with the data provided",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-04-15"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateConversationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConversationSuccessfulResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Conversations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    }
}